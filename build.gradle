import net.minecraftforge.gradle.common.task.SignJar

buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
//----------------------------------------------------------------------------------------------------------------------
version = "${version_immersiveposts}"
group = "twistedgate.immersiveposts"
archivesBaseName = "immersiveposts-${version_minecraft}"

repositories {
	maven {	name = "BlameJared"; url = "https://maven.blamejared.com/" } // IE files
}

minecraft {
	mappings channel: 'snapshot', version: "${version_fml_mappings}"
	// accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')
	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info' // Yes, "debug" recommended, but lagging the shit out of my system.
            property 'fml.earlyprogresswindow', 'false'
			mods {
				immersiveposts {
					source sourceSets.main
				}
			}
		}
		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info' // Yes, "debug" recommended, but lagging the shit out of my system.
            property 'fml.earlyprogresswindow', 'false'
			mods {
				immersiveposts {
					source sourceSets.main
				}
			}
		}
		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info' // Yes, "debug" recommended, but lagging the shit out of my system.
            property 'fml.earlyprogresswindow', 'false'
			args '--mod', 'immersiveposts', '--all', '--output', file('src/generated/resources/'), '--validate', '--existing', sourceSets.main.resources.srcDirs[0], '--existing', 'C:/Users/TwistedGate/.gradle/caches/forge_gradle/deobf_dependencies/blusunrize/immersiveengineering/ImmersiveEngineering/0.14-95-190fba3c_mapped_snapshot_20190719-1.14.3/ImmersiveEngineering-0.14-95-190fba3c_mapped_snapshot_20190719-1.14.3.jar'
			mods {
				immersiveposts {
					source sourceSets.main
				}
			}
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${version_forge_minecraft}"
	compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${version_ie}")
}

processResources {
	from(sourceSets.main.resources.srcDirs) {
		include 'META-INF/mods.toml'
		expand 'version': project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude 'META-INF/mods.toml'
	}
	outputs.upToDateWhen { false }
	doLast { file("${sourceSets.main.output.resourcesDir}/.gitversion-immersiveposts").text = 'git log "-1" "--format=%h"'.execute().in.text.trim() }
}

jar {
	manifest {
		attributes([
			"Specification-Title": "immersiveposts",
			"Specification-Vendor": "TwistedGate",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version_immersiveposts}",
			"Implementation-Vendor" :"TwistedGate",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) { type 'jar'; builtBy 'reobfJar'; }

task signJar(type: SignJar, dependsOn: jar) {
	onlyIf { project.hasProperty('keyStore') }
	if (project.hasProperty('keyStore')) {
		alias = project.alias
		storePass = project.storePass
		keyPass = project.storePass
		keyStore = project.keyStore
		inputFile = jar.archivePath
		outputFile = jar.archivePath
	}
}
build.dependsOn signJar

publishing {
	publications { mavenJava(MavenPublication) { artifact reobfArtifact } }
	repositories { maven { url "file:///${project.projectDir}/mcmodsrepo" } }
}
